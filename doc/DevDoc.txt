********************************************************************************
DevDoc.txt: Development notes
Author: Fabrizio Branca, Michael Knoll, Rainer Kuhn et. al.

Legend:

FIX: fixes a bug
CHG: inform about changed items
ADD: added feature
RMV: removed Item
RFT: refactoring / code cleanup
********************************************************************************

- TODO: check and extend changes for default XSS prevention
  - check already implemented adaptions of rk in tx_ptlist_controller_list (see changelog below) - is this the right place?
  + IMPORTANT: make default XSS prevention configurable for a complete list (e.g. pt_list usage for CSV and PDF)
    (Alternative, but not-so-easy-to-implemt: make default XSS prevention configurable for each dataDescriptionIdentifier via Typoscript) 
    
  - IMPORTANT: check for further default prevention actions
  - check new default XSS prevention behaviour of pt_mvc for unwanted effects, for 
    + breadcrumbs, 
    - bookmarks 
    - and other list features using tx_ptmvc_view::addItem()
  - Configuration plugin.tx_ptlist.controller.list.itemsPerPage should be configurable for each list id
  

+ (fb) BUG: added sortingDataDescriptions to the selectClause.
+ (fb) BUG: in list_itemList.tpl there was a "$columnDescriptionIdentifier|in_array:$structure_by_cols" construct which fails if
       $structure_by_cols is not an array. I didn't looked deeper into why this is no array, but simply added a check before that.
+ (mk) ADD: Possibility to structure a list by certain columns
+ (fb) ADD: apply stdWrap to dataDescription configuration's properties
+ (fb) ADD: string filter now supports "AND" queries: All search words will be concatenated with "and". The resulting expression
  must be in at least one of the data descriptions. 
  To simulate a fulltext search you can create a special datadescription only used by the string search by concatenating all fields you 
  want to search in:
  Example: 
  plugin.tx_ptlist.listConfig.profileSearchResults.data.mySearchField {
		special = CONCAT(fe_users.tx_myext_firstname, '|', fe_users.tx_myext_lastname)
  }
  [...]
  plugin.tx_ptlist.listConfig.profileSearchResults.filters.defaultFilterbox.10 < plugin.tx_ptlist.alias.filter_string
  plugin.tx_ptlist.listConfig.profileSearchResults.filters.defaultFilterbox.10 {
  	dataDescriptionIdentifier = mySearchField
  	filterIdentifier = search
  }  
+ (mk) ADD: PDF and CSV list now does NOT filter HTML by default. This setting is overwritten by TS plugin.tx_ptlist.view.filterHtml
+ (mk) ADD: Added generic pagers and some documentation on how to use them
+ (mk) FIX: tx_pteublis_controller_sortiment::getContents XSS prevention is now configurable via: plugin.tx_ptlist.view.filterHtml
+ (uk) FIX: fixed bug PDF template label variable add |ll:0 to allow label set in language files
+ (fb) FIX: fixed bug with breadcrumb output of range filter
+ (fb) ADD: added some new icons
+ (fb) ADD: added some typoscript examples (not finished yet)
+ (fb) RFT: changed mail address
+ (fb) RFT: minor code improvements
+ (fb) ADD: demo typoscript
+ (fb) ADD: added hint in the manual concerning the bug if external databases use the same credential as the typo3 database
+ (fb) RFT: filter breadcrumb, added html filtering
  + added new method tx_ptlist_filterCollection->where_isActive()
  + filterbreadcrumb can be hidden now via css if no filter is active
  + changed my mail address
+ (rk) CHG: Addition of default XSS prevention for database data, adaption for new default XSS prevention of pt_mvc views 
  ***** IMPORTANT: unfinished - this may result in unwanted effects for existing pt_list implementations! *****
  + tx_ptlist_controller_list:
    + filterboxDefaultAction(): added third param "false" to addItem() of complete filterbox (do not filter HTML here since the complete filterbox is already rendered as HTML)
    + listDefaultAction(): added third param "false" to addItem() of $this->getColumnContents() (do not filter HTML here since the column contents may already be rendered as HTML (e.g. from Typoscript wraps) and the database data is already HTML filtered (see getColumnContents()))
    + getColumnContents(): sending all data description raw data through XSS filter now:
      $values[$dataDescriptionIdentifier] = tx_pttools_div::htmlOutput($itemObj[$dataDescriptionIdentifier]); 
  + ext_emconf.php: raised pt_tools dependency to version "0.4.2-", raised pt_mvc dependency to version "0.0.2-"
+ (mk) ADD: Documentation of how controllers in pt_list are processed and how filters are processed
+ (mk) ADD: tx_ptlist_filter: added possibilty to reset sorting of list by filter if configured in TS
   + (mk) ADD: Configuration key filters.<filter_name>.resetListSortingStateOnSubmit in TS
+ (rk) FIX: tx_ptlist_view_list_itemList_csv::sendHeader(): fixed assertion position, changed default download type to 'I'
+ (mk) ADD: (class.tx_ptlist_list.php) Added method "resetSortingParameters()" for resetting all sorting states of sortable columns
+ (mk) CHG: Items of pdf-view are now converted to utf-8 before XML generation
+ (mk) ADD: Manual for PDF rendering
+ (mk) ADD: PDF rendering is now almost generic
  + (mk) ADD: Added pdf-column width to column description
  + (mk) CHG: Calculate column widths and column positions array by pt_list
  + (mk) CHG: Col pos and col width is scaled by view
+ (mk) ADD: PDF rendering configuration can now be done via TS
+ (mk) ADD: Generic smarty template for PDF rendering (for pt_xml2pdf)
+ (mk) ADD: Sample TS file for pdf rendering (typoscript/static/pdf/plugin.tx_ptlist_pdf_rendering_example.ts) (not tested yet)
+ (mk) ADD: Added TS configuration for CSV filename and type of file handling for generated CSV files
+ (mk) ADD: Added some documentation for generating PDF files with pt_list
+ (mk) ADD: Added TS configuration for PDF filename and type of file handling for generated PDF files 
+ (fb) RMV: tx_ptlist_controller_stringGeneric is obsolete as it can be done with the tx_ptlist_controller_string filter using "dataDescriptionIdentifier = *"
+ (fb) CHG: filterBox configuration has changed. Class is no longer a property, but the value of the main key
    Before:
    10 {
    	class < plugin.tx_ptlist.alias.filter_stringGeneric
    	filterIdentifier = genericSearch
    	label = Suche
    	dataDescriptionIdentifier = 
    }
    
    Now: 
    10 < plugin.tx_ptlist.alias.filter_stringGeneric
    10 {
    	filterIdentifier = genericSearch
    	label = Suche
    	dataDescriptionIdentifier = 
    }
+ (fb) ADD: dsn in listConfig and in renderUserFunction "fetchExternalData" can be a dsn string or a uid pointing to the tx_ptlist_databases table 
+ (fb) ADD: New table "tx_ptlist_databases"
+ (fb) CHG: renderUserFunctions only accepts numeric keys
+ (fb) CHG: tx_ptlist_renderer::cObj() renamed to tx_ptlist_renderer::cObject()
  + (fb) CHG: parameter for tx_ptlist_renderer::cObject() renamed from "cObj(.)" to "renderObj(.)"   

  
Configuration

== Extension configuration ==
plugin.tx_<condensedExtKey>.

== Controller configuration ==
plugin.tx_<condensedExtKey>.controller.<controllerName>.

== PrefixId-specific controller configuration ==
plugin.tx_<condensedExtKey>.controller.<controllerName>.<prefixId>.

== ListPrefix specific controller configuration ==
plugin.tx_<condensedExtKey>.controller.<controllerName>.<listPrefix>.

$this->conf = 
	[already existing property $this->conf]
	
		// tx_ptmvc_controllerFrontend->getConfiguration()
	[plugin.tx_<condensedExtKey>.controller.<controllerName>.] +
	[plugin.tx_<condensedExtKey>.controller.<controllerName>.<prefixId>.] +
	[flexFormSettings] +
	
		// tx_ptlist_controller_list->getConfiguration()
	[localConfiguration set in ->main() or ->__construct()] + 
	[plugin.tx_<condensedExtKey>.controller.<controllerName>.<listPrefix>.] +
	
		// tx_mvc_controller->prepare() 
	[localConfiguration set in ->main() or ->__construct()] 
	
	
Views 

plugin.tx_<condensedExtKey>.view.<viewName>.

$this->conf = 
	[plugin.tx_<condensedExtKey>.view.<viewName>.] +
	[<controllerConfig>.view.<viewName>.] 


TODO:
=====

- (mk) Make PDF rendering generic
  - (mk) Add pdf-column width to column description
  - (mk) Generate column widths and column positions array by pt_list
  - (mk) "Zoom" col pos and col width by PHP, if table is "too wide" if all columns are displayed
  - (mk) Will overflowing cells be overwritten by another cell, if background of "2nd" cell is set to white?!?
  - (mk) Implement "show" configuration for showing PDF cells or not showing them
- (mk) Write some documentation about all the stuff above
- (mk) Refactor tx_ptlist_controller_list::init()